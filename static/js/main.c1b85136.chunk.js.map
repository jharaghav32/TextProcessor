{"version":3,"sources":["component/TextForm.js","component/Navbarr.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","useState","backgroundColor","color","text","setText","class","className","htmlFor","id","rows","cols","value","onChange","event","target","type","onClick","e","preventDefault","toUpperCase","toLowerCase","navigator","clipboard","writeText","char","split","join","trim","replace","length","Navbarr","href","App","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAMe,SAASA,IACtB,MAA6BC,mBAAS,mBAAtC,mBACA,GADA,UACwBA,mBAAS,CAC/BC,gBAAgB,QAChBC,MAAM,WAFR,mBA+BA,GA/BA,UA+ByBF,mBAAS,MAAlC,mBAAOG,EAAP,KAAcC,EAAd,KACE,OACE,gCACE,qBAAKC,MAAM,+BACX,0DACR,iCACA,sBAAKC,UAAU,aAAf,UACI,uBAAOC,QAAQ,gCACf,0BAAUD,UAAU,gBAAgBE,GAAG,8BAA8BC,KAAK,IAAIC,KAAK,KAAKC,MAAOR,EAAMS,SAdjF,SAACC,GAGrBT,EAAQS,EAAMC,OAAOH,aAcvB,wBAAQI,KAAK,SAASV,MAAM,kBAAkBW,QArCxB,SAACC,GACrBA,EAAEC,iBACFd,EAAQD,EAAKgB,gBAmCf,uBACF,wBAAQJ,KAAK,SAASV,MAAM,oBAAoBW,QAlCvB,SAACC,GACtBA,EAAEC,iBACFd,EAAQD,EAAKiB,gBAgCjB,uBACA,wBAAQL,KAAK,SAASV,MAAM,kBAAkBW,QA/BxB,SAACC,GACnBA,EAAEC,iBACJd,EAAQ,MA6BV,uBACA,wBAAQW,KAAK,SAASV,MAAM,iBAAiBW,QA5BxB,WAEnBK,UAAUC,UAAUC,UAAUpB,IA0BhC,sBACA,wBAAQY,KAAK,SAASV,MAAM,kBAAkBW,QAzBxB,WACpB,IAAIQ,EAAOrB,EAAKsB,MAAM,QACtBrB,EAAQoB,EAAKE,KAAK,OAuBpB,iCAKA,sBAAKpB,UAAY,UAAjB,UACE,sDACA,8BAAKH,EAAKwB,OAAOC,QAAQ,OAAQ,KAAKH,MAAM,KAAKI,OAAjD,eAAqE1B,EAAK0B,OAA1E,kBAEC,6DAC6B,MAAM1B,EAAKsB,MAAM,KAAKI,OAAO,YC7D9C,SAASC,IACpB,OACI,8BAEA,sBAAKxB,UAAU,8CAAf,UACN,wBAAQA,UAAU,iBAAiBS,KAAK,SAAS,cAAY,WAAW,cAAY,uBAAuB,gBAAc,sBAAsB,gBAAc,QAAQ,aAAW,oBAAhL,SACE,sBAAMT,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BE,GAAG,sBAA7C,UACE,mBAAGF,UAAU,eAAeyB,KAAK,IAAjC,yBACA,oBAAIzB,UAAU,kCAAd,SACE,oBAAIA,UAAU,kBAAd,SACE,mBAAGA,UAAU,WAAWyB,KAAK,IAA7B,uBAIJ,sBAAMzB,UAAU,qCCmBL0B,MAxBf,WACE,OACE,qCAMM,cAACF,EAAD,IACA,cAAC/B,EAAD,CAIAkC,MAAQ,eCfHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.c1b85136.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types'\r\nimport  { useState } from 'react';\r\n\r\n\r\n\r\nexport default function TextForm() {\r\n  const [btnText,setbtnText] = useState(\"Enable DarkMode\");\r\n  const[stylec,setstylec]=useState({\r\n    backgroundColor:'white',\r\n    color:'black'\r\n  })\r\n  \r\n  const handleOnclick = (e)=>{\r\n    e.preventDefault();\r\n    setText(text.toUpperCase());\r\n  };\r\n  const handleLowclick = (e)=>{\r\n    e.preventDefault();\r\n    setText(text.toLowerCase());\r\n  };\r\n  const handleClear = (e)=>{\r\n    e.preventDefault();\r\n  setText(\" \");\r\n  };\r\n  const handleCopy = ()=>{\r\n  \r\n  navigator.clipboard.writeText(text);\r\n  };\r\n  const handleSpace = ()=>{\r\n  var char = text.split(/[ ]+/);\r\n  setText(char.join(\" \"));\r\n  };\r\n  const handleOnchange =(event)=>{\r\n    \r\n    \r\n    setText(event.target.value);\r\n    \r\n  };\r\n  const [text , setText] = useState(\" \");\r\n    return (\r\n      <div >\r\n        <nav class=\"navbar navbar-dark bg-dark\"/>\r\n        <h1>Enter your Text Here!!!!</h1>\r\n<form>\r\n<div className=\"form-group\" > \r\n    <label htmlFor=\"exampleFormControlTextarea1\"></label>\r\n    <textarea className=\"form-control \" id=\"exampleFormControlTextarea1\" rows=\"6\" cols=\"10\" value={text} onChange={handleOnchange}></textarea>\r\n  </div>\r\n  \r\n  <button type=\"button\" class=\"btn btn-primary\" onClick ={handleOnclick}>Uppercase</button>\r\n<button type=\"button\" class=\"btn btn-secondary\" onClick ={handleLowclick}>LowerCase</button>\r\n<button type=\"button\" class=\"btn btn-success\" onClick={handleClear}>clearText</button>\r\n<button type=\"button\" class=\"btn btn-danger\" onClick ={handleCopy}>CopyText</button>\r\n<button type=\"button\" class=\"btn btn-warning\" onClick={handleSpace}>DeleteExtraSpace</button>\r\n\r\n\r\n\r\n</form>\r\n<div className = \"summary\">\r\n  <h2>Processing your Text</h2>\r\n  <p >{text.trim().replace(/  +/g, \" \").split(\" \").length} words  and {text.length} characters </p>\r\n   \r\n   <div>\r\n     Time to read(in minute) : {.003*(text.split(\" \").length-1)}\r\n   </div>\r\n</div>\r\n\r\n</div>\r\n          \r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbarr () {\r\n    return (\r\n        <div>\r\n        \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n    <a className=\"navbar-brand\" href=\"#\">TextUtility</a>\r\n    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home </a>\r\n      </li>\r\n      \r\n    </ul>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      \r\n    </form>\r\n  </div>\r\n</nav>\r\n\r\n</div>\r\n    )\r\n    \r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\n\nimport TextForm from './component/TextForm';\nimport Navbarr from './component/Navbarr';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <>\n    {/* <Router>\n<Navbarr/> \n\n    <Switch>\n          <Route exact path=\"/\"> */}\n          <Navbarr/>\n          <TextForm\n          \n          \n          \n          title = \"MyForm\"/>\n          {/* </Route>\n          \n          \n        </Switch>\n    \n    </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}